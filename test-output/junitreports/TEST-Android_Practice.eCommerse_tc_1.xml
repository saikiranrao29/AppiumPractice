<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="Sais-MacBook-Air.local" failures="0" tests="2" name="Android_Practice.eCommerse_tc_1" time="23.434" errors="1" timestamp="2025-02-18T10:31:26 IST" skipped="1">
  <testcase classname="Android_Practice.eCommerse_tc_1" name="FillForm" time="0.000">
    <skipped/>
  </testcase> <!-- FillForm -->
  <testcase classname="Android_Practice.eCommerse_tc_1" name="InstallApplication" time="23.434">
    <error message="Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Could not find a connected Android device in 20000ms 
Host info: host: &#039;Sais-MacBook-Air.local&#039;, ip: &#039;fe80:0:0:0:1806:aec5:e20d:d149%en0&#039;
Build info: version: &#039;4.28.1&#039;, revision: &#039;73f5ad48a2&#039;
System info: os.name: &#039;Mac OS X&#039;, os.arch: &#039;aarch64&#039;, os.version: &#039;15.2&#039;, java.version: &#039;21.0.5&#039;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[Capabilities {appium:app: //Users//saikiran_rao//git/..., appium:appActivity: com.panterra.mobile.streams..., appium:appPackage: com.panterra.mobile.streams, appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:deviceName: Pixel9Pro, platformName: ANDROID}]}]
Capabilities {appium:app: //Users//saikiran_rao//git/..., appium:appActivity: com.panterra.mobile.streams..., appium:appPackage: com.panterra.mobile.streams, appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:deviceName: Pixel9Pro, platformName: ANDROID}" type="org.openqa.selenium.SessionNotCreatedException">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Could not find a connected Android device in 20000ms 
Host info: host: 'Sais-MacBook-Air.local', ip: 'fe80:0:0:0:1806:aec5:e20d:d149%en0'
Build info: version: '4.28.1', revision: '73f5ad48a2'
System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '15.2', java.version: '21.0.5'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[Capabilities {appium:app: //Users//saikiran_rao//git/..., appium:appActivity: com.panterra.mobile.streams..., appium:appPackage: com.panterra.mobile.streams, appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:deviceName: Pixel9Pro, platformName: ANDROID}]}]
Capabilities {appium:app: //Users//saikiran_rao//git/..., appium:appActivity: com.panterra.mobile.streams..., appium:appPackage: com.panterra.mobile.streams, appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:deviceName: Pixel9Pro, platformName: ANDROID}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:176)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:237)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:270)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:91)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:103)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:109)
at Android_Practice.InstallApp_Android.InstallApplication(InstallApp_Android.java:82)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
  </testcase> <!-- InstallApplication -->
</testsuite> <!-- Android_Practice.eCommerse_tc_1 -->
